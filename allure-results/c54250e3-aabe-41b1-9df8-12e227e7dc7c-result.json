{"name":"Runs Cucumber Feature","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"java.lang.RuntimeException: Failed to load the native library.\n\nThe error was \"Unable to load library 'libvlc':\nThe specified module could not be found.\r\n\nThe specified module could not be found.\r\n\nThe specified module could not be found.\r\n\nNative library (win32-x86-64/libvlc.dll) not found in resource path ([file:/C:/Users/gouthamr/AppData/Local/Temp/classpath456486929.jar, file:/C:/Program%20Files/JetBrains/IntelliJ%20IDEA%202022.1.3/lib/idea_rt.jar])\".\n\nThe required native libraries are named \"libvlc.dll\" and \"libvlccore.dll\".\n\nIn the text below <libvlc-path> represents the name of the directory containing \"libvlc.dll\" and \"libvlccore.dll\"...\n\nThere are a number of different ways to specify where to find the native libraries:\n 1. Include NativeLibrary.addSearchPath(\"libvlc\", \"<libvlc-path>\"); at the start of your application code.\n 2. Include System.setProperty(\"jna.library.path\", \"<libvlc-path>\"); at the start of your application code.\n 3. Specify -Djna.library.path=<libvlc-path> on the command-line when starting your application.\n 4. Add <libvlc-path> to the system search path (and reboot).\n\nIf this still does not work, then it may be necessary to explicitly add the native library directory to the operating\nsystem configuration - e.g. on Linux this might mean setting the LD_LIBRARY_PATH environment variable, or adding\nconfiguration to the \"/etc/ld.so.conf\" file or the \"/etc/ld.so.conf.d\" directory. Of these options, setting\nLD_LIBRARY_PATH is the only one that would not require root privileges.\n\nFinally, it is not possible to mix CPU architectures - it is not possible for a 64-bit Java Virtual Machine to load\n32-bit native libraries.\n\nMore information may be available in the log.\n","trace":"cucumber.runtime.CucumberException: java.lang.RuntimeException: Failed to load the native library.\n\nThe error was \"Unable to load library 'libvlc':\nThe specified module could not be found.\r\n\nThe specified module could not be found.\r\n\nThe specified module could not be found.\r\n\nNative library (win32-x86-64/libvlc.dll) not found in resource path ([file:/C:/Users/gouthamr/AppData/Local/Temp/classpath456486929.jar, file:/C:/Program%20Files/JetBrains/IntelliJ%20IDEA%202022.1.3/lib/idea_rt.jar])\".\n\nThe required native libraries are named \"libvlc.dll\" and \"libvlccore.dll\".\n\nIn the text below <libvlc-path> represents the name of the directory containing \"libvlc.dll\" and \"libvlccore.dll\"...\n\nThere are a number of different ways to specify where to find the native libraries:\n 1. Include NativeLibrary.addSearchPath(\"libvlc\", \"<libvlc-path>\"); at the start of your application code.\n 2. Include System.setProperty(\"jna.library.path\", \"<libvlc-path>\"); at the start of your application code.\n 3. Specify -Djna.library.path=<libvlc-path> on the command-line when starting your application.\n 4. Add <libvlc-path> to the system search path (and reboot).\n\nIf this still does not work, then it may be necessary to explicitly add the native library directory to the operating\nsystem configuration - e.g. on Linux this might mean setting the LD_LIBRARY_PATH environment variable, or adding\nconfiguration to the \"/etc/ld.so.conf\" file or the \"/etc/ld.so.conf.d\" directory. Of these options, setting\nLD_LIBRARY_PATH is the only one that would not require root privileges.\n\nFinally, it is not possible to mix CPU architectures - it is not possible for a 64-bit Java Virtual Machine to load\n32-bit native libraries.\n\nMore information may be available in the log.\n\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:69)\r\n\tat cucumber.api.testng.AbstractTestNGCucumberTests.feature(AbstractTestNGCucumberTests.java:21)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:583)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:648)\r\n\tat org.testng.TestRunner.run(TestRunner.java:505)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:455)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:364)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1137)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1049)\r\n\tat org.testng.TestNG.run(TestNG.java:1017)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\nCaused by: java.lang.RuntimeException: Failed to load the native library.\n\nThe error was \"Unable to load library 'libvlc':\nThe specified module could not be found.\r\n\nThe specified module could not be found.\r\n\nThe specified module could not be found.\r\n\nNative library (win32-x86-64/libvlc.dll) not found in resource path ([file:/C:/Users/gouthamr/AppData/Local/Temp/classpath456486929.jar, file:/C:/Program%20Files/JetBrains/IntelliJ%20IDEA%202022.1.3/lib/idea_rt.jar])\".\n\nThe required native libraries are named \"libvlc.dll\" and \"libvlccore.dll\".\n\nIn the text below <libvlc-path> represents the name of the directory containing \"libvlc.dll\" and \"libvlccore.dll\"...\n\nThere are a number of different ways to specify where to find the native libraries:\n 1. Include NativeLibrary.addSearchPath(\"libvlc\", \"<libvlc-path>\"); at the start of your application code.\n 2. Include System.setProperty(\"jna.library.path\", \"<libvlc-path>\"); at the start of your application code.\n 3. Specify -Djna.library.path=<libvlc-path> on the command-line when starting your application.\n 4. Add <libvlc-path> to the system search path (and reboot).\n\nIf this still does not work, then it may be necessary to explicitly add the native library directory to the operating\nsystem configuration - e.g. on Linux this might mean setting the LD_LIBRARY_PATH environment variable, or adding\nconfiguration to the \"/etc/ld.so.conf\" file or the \"/etc/ld.so.conf.d\" directory. Of these options, setting\nLD_LIBRARY_PATH is the only one that would not require root privileges.\n\nFinally, it is not possible to mix CPU architectures - it is not possible for a 64-bit Java Virtual Machine to load\n32-bit native libraries.\n\nMore information may be available in the log.\n\r\n\tat uk.co.caprica.vlcj.binding.LibVlcFactory.create(LibVlcFactory.java:198)\r\n\tat uk.co.caprica.vlcj.player.MediaPlayerFactory.<init>(MediaPlayerFactory.java:259)\r\n\tat appmanager.ExtentCucumberFormatter$ScreenRecorder.<init>(ExtentCucumberFormatter.java:562)\r\n\tat appmanager.ExtentCucumberFormatter.startVideoRecording(ExtentCucumberFormatter.java:505)\r\n\tat tests.TestRunner.startScenario(TestRunner.java:99)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\t... 25 more\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg0","value":"GreenKart"}],"start":1661014860360,"stop":1661014860789,"uuid":"c54250e3-aabe-41b1-9df8-12e227e7dc7c","historyId":"ddd8d92110dbabd26d30aa0d97c2e74e","fullName":"cucumber.api.testng.AbstractTestNGCucumberTests.feature","labels":[{"name":"package","value":"tests.TestRunner"},{"name":"testClass","value":"tests.TestRunner"},{"name":"testMethod","value":"feature"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"framework"},{"name":"subSuite","value":"tests.TestRunner"},{"name":"host","value":"STIPL-SMBL0354"},{"name":"thread","value":"12836@STIPL-SMBL0354.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}